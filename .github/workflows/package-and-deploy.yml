name: Docker

on:
  workflow_dispatch:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: content-api

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          export IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:${{ github.sha }}

          docker push $IMAGE_ID:${{ github.sha }}
          docker push $IMAGE_ID:$VERSION
      - name: Deploy to Swarm
        run: |
          export LATEST_IMAGE="$IMAGE_ID:${{ github.sha }}"
          eval $(ssh-agent -s)
          ssh-add - <<< "${{ secrets.private_key }}"
          docker --host ssh://penalosa@159.65.90.142 stack deploy -c swarm.stack.yml $IMAGE_NAME
#       - name: Deploy to swarm
#         uses: sagebind/docker-swarm-deploy-action@v2
#         with:
#           # Docker host to connect to
#           remote_host: ssh://penalosa@deployment_host.freshair.radio
#           # SSH public key of the server
#           ssh_public_key: ${{ secrets.public_key }}
#           ssh_private_key: ${{ secrets.private_key }}
